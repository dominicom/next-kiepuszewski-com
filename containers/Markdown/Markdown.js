import PropTypes from 'prop-types';
import Head from 'next/head'
import dynamic from 'next/dynamic'
import Image from 'next/image'
import { MDXProvider } from '@mdx-js/react'
// import { compile } from '@mdx-js/mdx'
// import remarkUnwrapImages from 'remark-unwrap-images'
import { Grid, Row } from 'layout'
import { Defaultpage } from 'templates/Defaultpage'

import styles from './Markdown.module.scss'

const RowParapraph = ({ children }) => (<Row><p className={styles.paragraph}>{children}</p></Row>)

// https://whoisryosuke.com/blog/2020/using-mdx-with-nextjs/
// https://www.theviewport.io/post/using-nextjs-and-nextimage-with-mdx-markdown-processing

const components = { 
  // p: RowParapraph,
  p: paragraph => {
      // ToDo @check if paragraph has children 
      // setTimeout(()=> { console.log(paragraph)}, 100)
      const props = paragraph.children.props
      if (props && props.originalType === 'img') {
        return <img src={paragraph.children.props.src} />
      }
      return RowParapraph
    }
}




export default function Markdown({ children, theme, filename }) {
  console.log('the filename', filename)
  const MDXContent = dynamic(() => import(`contents/${filename}`))

  return (
    <MDXProvider components={components} >
      <Grid>
        <MDXContent />
      </Grid>
    </MDXProvider>
  )
}

Markdown.propTypes = {
  filename: PropTypes.string.isRequired,
}




// return (
//   <MDXProvider components={components}>

//       {/* <Head>
//         <title>Contact | Create Next App</title>
//         <meta name="description" content="Generated by create next app" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head> */}
//       <Grid>
//         <h6>
//           Markdown content from wrapper component
//         </h6>
//       </Grid>
//       <Grid theme={theme} >
//         <MDXContent />
//         {children}
//       </Grid>


//   </MDXProvider>
// )